{
  "name": "hyperzoekt - Rust",
  "build": {
    "dockerfile": "Dockerfile",
    "context": ".."
  },
  "customizations": {
    "vscode": {
      "extensions": [
        "rust-lang.rust-analyzer",
        "ms-vscode.cpptools"
      ],
      "settings": {
        "terminal.integrated.defaultProfile.linux": "bash",
        "editor.formatOnSave": true
      }
    }
  },
  // SSH forwarding options
  // - If you run VS Code from a host that exposes an SSH agent socket, set
  //   the host env var `SSH_AUTH_SOCK` (typically already set). The devcontainer
  //   will bind that socket into the container at `/ssh-agent/socket` so the
  //   container can authenticate with your host keys (no copying required).
  // - If you prefer binding your host ~/.ssh directly into the container, set
  //   `WSL_SSH_PATH` (or another host env var) to the full path of your host
  //   .ssh directory; the container will mount it into `/home/vscode/.ssh`.
  // Examples (PowerShell, run once):
  // setx WSL_SSH_PATH "\\\\wsl.localhost\\Ubuntu-24.04\\home\\YOUR_USER_NAME_HERE\\.ssh"
  // For macOS/Linux run the container from a user with SSH_AGENT running so
  // the `SSH_AUTH_SOCK` env var is available to the Remote - Containers process.
  "mounts": [
    // SSH mounts are disabled by default to avoid creating an empty bind "source"
    // which causes Docker to fail with: "invalid mount config for type 'bind': field Source must not be empty".
    // If you want SSH agent forwarding, enable one of these options and then
    // uncomment the corresponding line(s) below:
    //  - Ensure SSH_AUTH_SOCK is set in the environment that launches VS Code / the devcontainer CLI
    //  - Or set WSL_SSH_PATH to the host .ssh path (example in the top comments)
    // Example (uncomment when ready):
    // "source=${localEnv:SSH_AUTH_SOCK},target=/ssh-agent/socket,type=bind,consistency=cached",
    // "source=${localEnv:WSL_SSH_PATH},target=/home/vscode/.ssh,type=bind,consistency=cached"
  ],
  "postCreateCommand": "bash .devcontainer/scripts/setup_devcontainer.sh",
  "postStartCommand": "bash .devcontainer/scripts/start_devcontainer.sh",
  // If you want SSH agent forwarding, configure it in your environment or use the
  // "ssh-agent" devcontainer feature instead of binding SSH_AUTH_SOCK directly.
  "remoteEnv": {
    // inside the container point to the mounted agent socket
    "SSH_AUTH_SOCK": "/ssh-agent/socket",
    "SCCACHE_DIR": "/workspaces/hyperzoekt/.sccache",
    "CARGO_HOME": "/home/vscode/.cargo",
    "CARGO_TARGET_DIR": "/tmp/hyperzoekt-target",
    "RUSTUP_HOME": "/home/vscode/.rustup",
    "PATH": "/usr/local/bin:/home/vscode/.cargo/bin:/usr/bin:/bin:${PATH}"
  },
  "remoteUser": "vscode"
}
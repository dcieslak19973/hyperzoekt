{{- if .Values.redis.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hyperzoekt.fullname" . }}-redis
  labels:
    {{- include "hyperzoekt.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
  {{- with .Values.redis.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "hyperzoekt.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: redis
  template:
    metadata:
      labels:
        {{- include "hyperzoekt.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: redis
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "hyperzoekt.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: redis
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.redis.image.registry }}/{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}
          imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
          command:
            - redis-server
            - --appendonly
            - "yes"
          ports:
            - name: redis
              containerPort: {{ .Values.redis.service.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.redis.resources | nindent 12 }}
          {{- if .Values.redis.persistence.enabled }}
          volumeMounts:
            - name: redis-data
              mountPath: /data
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.redis.persistence.enabled }}
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: {{ include "hyperzoekt.fullname" . }}-redis
      {{- end }}
{{- end }}
---
{{- if .Values.redis.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "hyperzoekt.fullname" . }}-redis
  labels:
    {{- include "hyperzoekt.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
  {{- with .Values.redis.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  type: {{ .Values.redis.service.type }}
  ports:
    - port: {{ .Values.redis.service.port }}
      targetPort: redis
      protocol: TCP
      name: redis
  selector:
    {{- include "hyperzoekt.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: redis
{{- end }}
---
{{- if and .Values.redis.enabled .Values.redis.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "hyperzoekt.fullname" . }}-redis
  labels:
    {{- include "hyperzoekt.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
  {{- with .Values.redis.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  accessModes:
    {{- toYaml .Values.redis.persistence.accessModes | nindent 4 }}
  resources:
    requests:
      storage: {{ .Values.redis.persistence.size }}
  {{- if .Values.global.storageClass }}
  storageClassName: {{ .Values.global.storageClass }}
  {{- end }}
{{- end }}

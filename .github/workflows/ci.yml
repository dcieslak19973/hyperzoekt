name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        toolchain: [stable, nightly]
    steps:
      - uses: actions/checkout@v4

      - name: Fail on deprecated GitHub Actions commands
        run: |
          # search repository for deprecated commands that should be replaced with environment files
          set -euo pipefail
          # exclude common build/output dirs to avoid scanning generated files
          if grep -R --line-number --binary-files=without-match --exclude-dir=.git --exclude-dir=target -e 'set-output' -e 'set-env' .; then
            echo "::error::Deprecated GitHub Actions command found (set-output or set-env). Replace with environment files: GITHUB_OUTPUT / GITHUB_ENV"
            exit 1
          fi

      - name: Cache cargo registry and target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true
          components: rustfmt, clippy

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

      - name: Check formatting
        if: matrix.toolchain == 'stable'
        run: cargo fmt -- --check

      - name: Run clippy
        if: matrix.toolchain == 'stable'
        run: cargo clippy -- -D warnings
